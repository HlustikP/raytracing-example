.TH "Shape" 3 "raytracing-example" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Shape \- Abstract class representing a shape\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <shape\&.h>\fP
.PP
Inherited by \fBShapeContainer\fP, and \fBSphere\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~Shape\fP ()=0"
.br
.ti -1c
.RI "virtual std::optional< \fBIntersection\fP > \fBisIntersecting\fP (const \fBRay\fP &ray, \fBInterval\fP interval) const =0"
.br
.RI "Checks whether the shape is intersecting with a given ray\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::shared_ptr< \fBMaterial\fP > \fBmaterial_\fP {}"
.br
.RI "The material of the shape\&. "
.in -1c
.SH "Detailed Description"
.PP 
Abstract class representing a shape\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "virtual Shape::~Shape ()\fC [pure virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "virtual std::optional< \fBIntersection\fP > Shape::isIntersecting (const \fBRay\fP & ray, \fBInterval\fP interval) const\fC [pure virtual]\fP"

.PP
Checks whether the shape is intersecting with a given ray\&. 
.PP
\fBParameters\fP
.RS 4
\fIray\fP the ray to check 
.br
\fIinterval\fP the interval in which to check for intersections 
.RE
.PP
\fBReturns\fP
.RS 4
an \fBIntersection\fP on success, otherwise std::nullopt if no intersection was found 
.RE
.PP

.PP
Implemented in \fBShapeContainer\fP, and \fBSphere\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "std::shared_ptr<\fBMaterial\fP> Shape::material_ {}"

.PP
The material of the shape\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for raytracing-example from the source code\&.
